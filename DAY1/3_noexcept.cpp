// 3_noexcept - 14 page
#include <iostream>
#include <exception>

// noexcept ( C++11 )
// #1. 함수가 예외가 있는지 없는지 조사
// #2. 함수가 예외가 없음을 알리기 위해 사용

// 컴파일 할때는 함수의 선언만 있으면 됩니다.
// => 따라서 컴파일러는 함수가 예외 가능성이 있는지 조사할때
//    함수의 구현이 아닌 선언만 보고 조사하게 됩니다.
//    따라서 아래 규칙대로 조사합니다.

// 함수와 예외 규칙
// 1. 모든 함수는 기본적으로 예외의 가능성이 있다.
// 2. 예외가 없음을 보장할수 있다면 함수 () 뒤에 noexcept 를 붙이면 됩니다.

// noexcept 를 붙였는데, 예외가 있으면 어떻게 되나요 ?
// => undefined 입니다. 사용하면 안됩니다.

// 왜??? 어떤 이유로 예외가 없다고 알리고, 없는지 조사하나요 ??
// => 어떤 경우에 사용하나요 
// => 내일 move 배울때 사용합니다. 지금은 문법만 알아 두세요.. 

void foo() noexcept 
{
}
void goo()
{
}

int main()
{
	// 사용법 : noexcept(함수 호출식) => 함수 가 예외가능성이 있는지 조사
	//								 => 함수가 실제 호출되는 것은 아니고
	//								 => 컴파일 시간에 조사만.
	bool b1 = noexcept( foo() );
	bool b2 = noexcept( goo() );

	std::cout << b1 << ", " << b2 << ", " << std::endl;
}




